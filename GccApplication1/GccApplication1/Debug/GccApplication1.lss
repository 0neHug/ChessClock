
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000f1e  00000fb2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  00800062  00800062  00000fb4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fe4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e07  00000000  00000000  00001084  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005d8  00000000  00000000  00001e8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000078f  00000000  00000000  00002463  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00002bf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049a  00000000  00000000  00002cec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000099a  00000000  00000000  00003186  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003b20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3e c0       	rjmp	.+124    	; 0x7e <__ctors_end>
   2:	58 c0       	rjmp	.+176    	; 0xb4 <__bad_interrupt>
   4:	57 c0       	rjmp	.+174    	; 0xb4 <__bad_interrupt>
   6:	56 c0       	rjmp	.+172    	; 0xb4 <__bad_interrupt>
   8:	de c1       	rjmp	.+956    	; 0x3c6 <__vector_4>
   a:	54 c0       	rjmp	.+168    	; 0xb4 <__bad_interrupt>
   c:	53 c0       	rjmp	.+166    	; 0xb4 <__bad_interrupt>
   e:	52 c0       	rjmp	.+164    	; 0xb4 <__bad_interrupt>
  10:	51 c0       	rjmp	.+162    	; 0xb4 <__bad_interrupt>
  12:	50 c0       	rjmp	.+160    	; 0xb4 <__bad_interrupt>
  14:	4f c0       	rjmp	.+158    	; 0xb4 <__bad_interrupt>
  16:	4e c0       	rjmp	.+156    	; 0xb4 <__bad_interrupt>
  18:	4d c0       	rjmp	.+154    	; 0xb4 <__bad_interrupt>
  1a:	4c c0       	rjmp	.+152    	; 0xb4 <__bad_interrupt>
  1c:	4b c0       	rjmp	.+150    	; 0xb4 <__bad_interrupt>
  1e:	4a c0       	rjmp	.+148    	; 0xb4 <__bad_interrupt>
  20:	49 c0       	rjmp	.+146    	; 0xb4 <__bad_interrupt>
  22:	80 c0       	rjmp	.+256    	; 0x124 <_Z7segcharj+0x44>
  24:	64 c0       	rjmp	.+200    	; 0xee <_Z7segcharj+0xe>
  26:	66 c0       	rjmp	.+204    	; 0xf4 <_Z7segcharj+0x14>
  28:	68 c0       	rjmp	.+208    	; 0xfa <_Z7segcharj+0x1a>
  2a:	6a c0       	rjmp	.+212    	; 0x100 <_Z7segcharj+0x20>
  2c:	6c c0       	rjmp	.+216    	; 0x106 <_Z7segcharj+0x26>
  2e:	6e c0       	rjmp	.+220    	; 0x10c <_Z7segcharj+0x2c>
  30:	70 c0       	rjmp	.+224    	; 0x112 <_Z7segcharj+0x32>
  32:	72 c0       	rjmp	.+228    	; 0x118 <_Z7segcharj+0x38>
  34:	74 c0       	rjmp	.+232    	; 0x11e <_Z7segcharj+0x3e>
  36:	7b c0       	rjmp	.+246    	; 0x12e <_Z7segcharj+0x4e>
  38:	7a c0       	rjmp	.+244    	; 0x12e <_Z7segcharj+0x4e>
  3a:	79 c0       	rjmp	.+242    	; 0x12e <_Z7segcharj+0x4e>
  3c:	78 c0       	rjmp	.+240    	; 0x12e <_Z7segcharj+0x4e>
  3e:	77 c0       	rjmp	.+238    	; 0x12e <_Z7segcharj+0x4e>
  40:	76 c0       	rjmp	.+236    	; 0x12e <_Z7segcharj+0x4e>
  42:	75 c0       	rjmp	.+234    	; 0x12e <_Z7segcharj+0x4e>
  44:	74 c0       	rjmp	.+232    	; 0x12e <_Z7segcharj+0x4e>
  46:	73 c0       	rjmp	.+230    	; 0x12e <_Z7segcharj+0x4e>
  48:	72 c0       	rjmp	.+228    	; 0x12e <_Z7segcharj+0x4e>
  4a:	71 c0       	rjmp	.+226    	; 0x12e <_Z7segcharj+0x4e>
  4c:	70 c0       	rjmp	.+224    	; 0x12e <_Z7segcharj+0x4e>
  4e:	6f c0       	rjmp	.+222    	; 0x12e <_Z7segcharj+0x4e>
  50:	6e c0       	rjmp	.+220    	; 0x12e <_Z7segcharj+0x4e>
  52:	6d c0       	rjmp	.+218    	; 0x12e <_Z7segcharj+0x4e>
  54:	6c c0       	rjmp	.+216    	; 0x12e <_Z7segcharj+0x4e>
  56:	6b c0       	rjmp	.+214    	; 0x12e <_Z7segcharj+0x4e>
  58:	6a c0       	rjmp	.+212    	; 0x12e <_Z7segcharj+0x4e>
  5a:	69 c0       	rjmp	.+210    	; 0x12e <_Z7segcharj+0x4e>
  5c:	68 c0       	rjmp	.+208    	; 0x12e <_Z7segcharj+0x4e>
  5e:	67 c0       	rjmp	.+206    	; 0x12e <_Z7segcharj+0x4e>
  60:	66 c0       	rjmp	.+204    	; 0x12e <_Z7segcharj+0x4e>
  62:	65 c0       	rjmp	.+202    	; 0x12e <_Z7segcharj+0x4e>
  64:	64 c0       	rjmp	.+200    	; 0x12e <_Z7segcharj+0x4e>
  66:	63 c0       	rjmp	.+198    	; 0x12e <_Z7segcharj+0x4e>
  68:	62 c0       	rjmp	.+196    	; 0x12e <_Z7segcharj+0x4e>
  6a:	61 c0       	rjmp	.+194    	; 0x12e <_Z7segcharj+0x4e>
  6c:	60 c0       	rjmp	.+192    	; 0x12e <_Z7segcharj+0x4e>
  6e:	5f c0       	rjmp	.+190    	; 0x12e <_Z7segcharj+0x4e>
  70:	5e c0       	rjmp	.+188    	; 0x12e <_Z7segcharj+0x4e>
  72:	5d c0       	rjmp	.+186    	; 0x12e <_Z7segcharj+0x4e>
  74:	5c c0       	rjmp	.+184    	; 0x12e <_Z7segcharj+0x4e>
  76:	5b c0       	rjmp	.+182    	; 0x12e <_Z7segcharj+0x4e>
  78:	5a c0       	rjmp	.+180    	; 0x12e <_Z7segcharj+0x4e>
  7a:	59 c0       	rjmp	.+178    	; 0x12e <_Z7segcharj+0x4e>
  7c:	56 c0       	rjmp	.+172    	; 0x12a <_Z7segcharj+0x4a>

0000007e <__ctors_end>:
  7e:	11 24       	eor	r1, r1
  80:	1f be       	out	0x3f, r1	; 63
  82:	cf e5       	ldi	r28, 0x5F	; 95
  84:	d2 e0       	ldi	r29, 0x02	; 2
  86:	de bf       	out	0x3e, r29	; 62
  88:	cd bf       	out	0x3d, r28	; 61

0000008a <__do_copy_data>:
  8a:	10 e0       	ldi	r17, 0x00	; 0
  8c:	a0 e6       	ldi	r26, 0x60	; 96
  8e:	b0 e0       	ldi	r27, 0x00	; 0
  90:	ee e1       	ldi	r30, 0x1E	; 30
  92:	ff e0       	ldi	r31, 0x0F	; 15
  94:	02 c0       	rjmp	.+4      	; 0x9a <__do_copy_data+0x10>
  96:	05 90       	lpm	r0, Z+
  98:	0d 92       	st	X+, r0
  9a:	a2 36       	cpi	r26, 0x62	; 98
  9c:	b1 07       	cpc	r27, r17
  9e:	d9 f7       	brne	.-10     	; 0x96 <__do_copy_data+0xc>

000000a0 <__do_clear_bss>:
  a0:	20 e0       	ldi	r18, 0x00	; 0
  a2:	a2 e6       	ldi	r26, 0x62	; 98
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	01 c0       	rjmp	.+2      	; 0xaa <.do_clear_bss_start>

000000a8 <.do_clear_bss_loop>:
  a8:	1d 92       	st	X+, r1

000000aa <.do_clear_bss_start>:
  aa:	a8 37       	cpi	r26, 0x78	; 120
  ac:	b2 07       	cpc	r27, r18
  ae:	e1 f7       	brne	.-8      	; 0xa8 <.do_clear_bss_loop>
  b0:	db d2       	rcall	.+1462   	; 0x668 <main>
  b2:	33 c7       	rjmp	.+3686   	; 0xf1a <_exit>

000000b4 <__bad_interrupt>:
  b4:	a5 cf       	rjmp	.-182    	; 0x0 <__vectors>

000000b6 <_Z12EEPROM_writejh>:
bool flag_plr1 = false,flag_plr2 = false, set_time = true;

void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE))
  b6:	e1 99       	sbic	0x1c, 1	; 28
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <_Z12EEPROM_writejh>
	;
	/* Set up address and data registers */
	EEAR = uiAddress;
  ba:	9f bb       	out	0x1f, r25	; 31
  bc:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
  be:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1<<EEMWE);
  c0:	8c b3       	in	r24, 0x1c	; 28
  c2:	84 60       	ori	r24, 0x04	; 4
  c4:	8c bb       	out	0x1c, r24	; 28
	/* Start eeprom write by setting EEWE */
	EECR |= (1<<EEWE);
  c6:	8c b3       	in	r24, 0x1c	; 28
  c8:	82 60       	ori	r24, 0x02	; 2
  ca:	8c bb       	out	0x1c, r24	; 28
  cc:	08 95       	ret

000000ce <_Z11EEPROM_readj>:
}

unsigned char EEPROM_read(unsigned int uiAddress)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE))
  ce:	e1 99       	sbic	0x1c, 1	; 28
  d0:	fe cf       	rjmp	.-4      	; 0xce <_Z11EEPROM_readj>
	;
	/* Set up address register */
	EEAR = uiAddress;
  d2:	9f bb       	out	0x1f, r25	; 31
  d4:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<<EERE);
  d6:	8c b3       	in	r24, 0x1c	; 28
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	8c bb       	out	0x1c, r24	; 28
	/* Return data from data register */
	return EEDR;
  dc:	8d b3       	in	r24, 0x1d	; 29
}
  de:	08 95       	ret

000000e0 <_Z7segcharj>:


void segchar (unsigned int seg)
{
	switch(seg)
  e0:	8e 32       	cpi	r24, 0x2E	; 46
  e2:	91 05       	cpc	r25, r1
  e4:	20 f5       	brcc	.+72     	; 0x12e <_Z7segcharj+0x4e>
  e6:	fc 01       	movw	r30, r24
  e8:	ef 5e       	subi	r30, 0xEF	; 239
  ea:	ff 4f       	sbci	r31, 0xFF	; 255
  ec:	09 94       	ijmp
	{
		case 1: PORTA = 0b11111001;break;
  ee:	89 ef       	ldi	r24, 0xF9	; 249
  f0:	8b bb       	out	0x1b, r24	; 27
  f2:	08 95       	ret
		case 2: PORTA = 0b10100100;break;
  f4:	84 ea       	ldi	r24, 0xA4	; 164
  f6:	8b bb       	out	0x1b, r24	; 27
  f8:	08 95       	ret
		case 3: PORTA = 0b10110000;break;
  fa:	80 eb       	ldi	r24, 0xB0	; 176
  fc:	8b bb       	out	0x1b, r24	; 27
  fe:	08 95       	ret
		case 4: PORTA = 0b10011001;break;
 100:	89 e9       	ldi	r24, 0x99	; 153
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
		case 5: PORTA = 0b10010010;break;
 106:	82 e9       	ldi	r24, 0x92	; 146
 108:	8b bb       	out	0x1b, r24	; 27
 10a:	08 95       	ret
		case 6: PORTA = 0b10000010;break;
 10c:	82 e8       	ldi	r24, 0x82	; 130
 10e:	8b bb       	out	0x1b, r24	; 27
 110:	08 95       	ret
		case 7: PORTA = 0b11111000;break;
 112:	88 ef       	ldi	r24, 0xF8	; 248
 114:	8b bb       	out	0x1b, r24	; 27
 116:	08 95       	ret
		case 8: PORTA = 0b10000000;break;
 118:	80 e8       	ldi	r24, 0x80	; 128
 11a:	8b bb       	out	0x1b, r24	; 27
 11c:	08 95       	ret
		case 9: PORTA = 0b10010000;break;
 11e:	80 e9       	ldi	r24, 0x90	; 144
 120:	8b bb       	out	0x1b, r24	; 27
 122:	08 95       	ret
		case 0: PORTA = 0b11000000;break;
 124:	80 ec       	ldi	r24, 0xC0	; 192
 126:	8b bb       	out	0x1b, r24	; 27
 128:	08 95       	ret
		case '-': PORTA = 0b10111111;break;
 12a:	8f eb       	ldi	r24, 0xBF	; 191
 12c:	8b bb       	out	0x1b, r24	; 27
 12e:	08 95       	ret

00000130 <_Z8uartINITv>:
	}
}

void uartINIT ()
{
	UBRRH = (unsigned char) (12>>8);
 130:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) 12;
 132:	8c e0       	ldi	r24, 0x0C	; 12
 134:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1<<TXEN);
 136:	88 e0       	ldi	r24, 0x08	; 8
 138:	8a b9       	out	0x0a, r24	; 10
	UCSRB|= (1<<RXCIE);
 13a:	8a b1       	in	r24, 0x0a	; 10
 13c:	80 68       	ori	r24, 0x80	; 128
 13e:	8a b9       	out	0x0a, r24	; 10
	UCSRA|= (1<<U2X);
 140:	8b b1       	in	r24, 0x0b	; 11
 142:	82 60       	ori	r24, 0x02	; 2
 144:	8b b9       	out	0x0b, r24	; 11
	UCSRC = (1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
 146:	86 e8       	ldi	r24, 0x86	; 134
 148:	80 bd       	out	0x20, r24	; 32
 14a:	08 95       	ret

0000014c <_Z8uartSENDh>:
}

void uartSEND (unsigned char data)
{
	while(!(UCSRA&(1<<UDRE)));
 14c:	5d 9b       	sbis	0x0b, 5	; 11
 14e:	fe cf       	rjmp	.-4      	; 0x14c <_Z8uartSENDh>
	UDR = data;
 150:	8c b9       	out	0x0c, r24	; 12
 152:	08 95       	ret

00000154 <_Z9timerINITv>:

	
}
void timerINIT (void)
{
	TCCR1B |=(1<<WGM12);
 154:	8e b5       	in	r24, 0x2e	; 46
 156:	88 60       	ori	r24, 0x08	; 8
 158:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1<<OCIE1A);
 15a:	89 b7       	in	r24, 0x39	; 57
 15c:	80 64       	ori	r24, 0x40	; 64
 15e:	89 bf       	out	0x39, r24	; 57
	OCR1AH = 0b00001111; 
 160:	8f e0       	ldi	r24, 0x0F	; 15
 162:	8b bd       	out	0x2b, r24	; 43
	OCR1AL = 0b01000010;
 164:	82 e4       	ldi	r24, 0x42	; 66
 166:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= (1<<CS12);
 168:	8e b5       	in	r24, 0x2e	; 46
 16a:	84 60       	ori	r24, 0x04	; 4
 16c:	8e bd       	out	0x2e, r24	; 46
 16e:	08 95       	ret

00000170 <_Z10showNumberjj>:
}
void showNumber(unsigned int num1,unsigned int num2)
{
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	fc 01       	movw	r30, r24
 176:	ab 01       	movw	r20, r22
	
	
	
	
	L4 = num1%10;
 178:	9c 01       	movw	r18, r24
 17a:	ad ec       	ldi	r26, 0xCD	; 205
 17c:	bc ec       	ldi	r27, 0xCC	; 204
 17e:	c1 d6       	rcall	.+3458   	; 0xf02 <__umulhisi3>
 180:	96 95       	lsr	r25
 182:	87 95       	ror	r24
 184:	96 95       	lsr	r25
 186:	87 95       	ror	r24
 188:	96 95       	lsr	r25
 18a:	87 95       	ror	r24
 18c:	9c 01       	movw	r18, r24
 18e:	22 0f       	add	r18, r18
 190:	33 1f       	adc	r19, r19
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	82 0f       	add	r24, r18
 1a0:	93 1f       	adc	r25, r19
 1a2:	9f 01       	movw	r18, r30
 1a4:	28 1b       	sub	r18, r24
 1a6:	39 0b       	sbc	r19, r25
 1a8:	30 93 6d 00 	sts	0x006D, r19	; 0x80006d <L4+0x1>
 1ac:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <L4>
	num1/=10;
 1b0:	9f 01       	movw	r18, r30
 1b2:	a7 d6       	rcall	.+3406   	; 0xf02 <__umulhisi3>
 1b4:	ec 01       	movw	r28, r24
 1b6:	d6 95       	lsr	r29
 1b8:	c7 95       	ror	r28
 1ba:	d6 95       	lsr	r29
 1bc:	c7 95       	ror	r28
 1be:	d6 95       	lsr	r29
 1c0:	c7 95       	ror	r28
	L3 = num1%10;
 1c2:	9e 01       	movw	r18, r28
 1c4:	9e d6       	rcall	.+3388   	; 0xf02 <__umulhisi3>
 1c6:	96 95       	lsr	r25
 1c8:	87 95       	ror	r24
 1ca:	96 95       	lsr	r25
 1cc:	87 95       	ror	r24
 1ce:	96 95       	lsr	r25
 1d0:	87 95       	ror	r24
 1d2:	9c 01       	movw	r18, r24
 1d4:	22 0f       	add	r18, r18
 1d6:	33 1f       	adc	r19, r19
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	82 0f       	add	r24, r18
 1e6:	93 1f       	adc	r25, r19
 1e8:	9e 01       	movw	r18, r28
 1ea:	28 1b       	sub	r18, r24
 1ec:	39 0b       	sbc	r19, r25
 1ee:	30 93 6f 00 	sts	0x006F, r19	; 0x80006f <L3+0x1>
 1f2:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <L3>
	num1/=10;
 1f6:	9f 01       	movw	r18, r30
 1f8:	36 95       	lsr	r19
 1fa:	27 95       	ror	r18
 1fc:	36 95       	lsr	r19
 1fe:	27 95       	ror	r18
 200:	ab e7       	ldi	r26, 0x7B	; 123
 202:	b4 e1       	ldi	r27, 0x14	; 20
 204:	7e d6       	rcall	.+3324   	; 0xf02 <__umulhisi3>
 206:	ec 01       	movw	r28, r24
 208:	d6 95       	lsr	r29
 20a:	c7 95       	ror	r28
	L2 = num1%10;
 20c:	9e 01       	movw	r18, r28
 20e:	ad ec       	ldi	r26, 0xCD	; 205
 210:	bc ec       	ldi	r27, 0xCC	; 204
 212:	77 d6       	rcall	.+3310   	; 0xf02 <__umulhisi3>
 214:	96 95       	lsr	r25
 216:	87 95       	ror	r24
 218:	96 95       	lsr	r25
 21a:	87 95       	ror	r24
 21c:	96 95       	lsr	r25
 21e:	87 95       	ror	r24
 220:	9c 01       	movw	r18, r24
 222:	22 0f       	add	r18, r18
 224:	33 1f       	adc	r19, r19
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	82 0f       	add	r24, r18
 234:	93 1f       	adc	r25, r19
 236:	9e 01       	movw	r18, r28
 238:	28 1b       	sub	r18, r24
 23a:	39 0b       	sbc	r19, r25
 23c:	30 93 71 00 	sts	0x0071, r19	; 0x800071 <L2+0x1>
 240:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <L2>
	num1/=10;
 244:	9f 01       	movw	r18, r30
 246:	36 95       	lsr	r19
 248:	27 95       	ror	r18
 24a:	36 95       	lsr	r19
 24c:	27 95       	ror	r18
 24e:	36 95       	lsr	r19
 250:	27 95       	ror	r18
 252:	a5 ec       	ldi	r26, 0xC5	; 197
 254:	b0 e2       	ldi	r27, 0x20	; 32
 256:	55 d6       	rcall	.+3242   	; 0xf02 <__umulhisi3>
 258:	fc 01       	movw	r30, r24
 25a:	f2 95       	swap	r31
 25c:	e2 95       	swap	r30
 25e:	ef 70       	andi	r30, 0x0F	; 15
 260:	ef 27       	eor	r30, r31
 262:	ff 70       	andi	r31, 0x0F	; 15
 264:	ef 27       	eor	r30, r31
	L1 = num1%10;	
 266:	9f 01       	movw	r18, r30
 268:	ad ec       	ldi	r26, 0xCD	; 205
 26a:	bc ec       	ldi	r27, 0xCC	; 204
 26c:	4a d6       	rcall	.+3220   	; 0xf02 <__umulhisi3>
 26e:	96 95       	lsr	r25
 270:	87 95       	ror	r24
 272:	96 95       	lsr	r25
 274:	87 95       	ror	r24
 276:	96 95       	lsr	r25
 278:	87 95       	ror	r24
 27a:	9c 01       	movw	r18, r24
 27c:	22 0f       	add	r18, r18
 27e:	33 1f       	adc	r19, r19
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	88 0f       	add	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	82 0f       	add	r24, r18
 28e:	93 1f       	adc	r25, r19
 290:	9f 01       	movw	r18, r30
 292:	28 1b       	sub	r18, r24
 294:	39 0b       	sbc	r19, r25
 296:	30 93 73 00 	sts	0x0073, r19	; 0x800073 <L1+0x1>
 29a:	20 93 72 00 	sts	0x0072, r18	; 0x800072 <L1>
	
	R4 = num2%10;
 29e:	9a 01       	movw	r18, r20
 2a0:	30 d6       	rcall	.+3168   	; 0xf02 <__umulhisi3>
 2a2:	96 95       	lsr	r25
 2a4:	87 95       	ror	r24
 2a6:	96 95       	lsr	r25
 2a8:	87 95       	ror	r24
 2aa:	96 95       	lsr	r25
 2ac:	87 95       	ror	r24
 2ae:	9c 01       	movw	r18, r24
 2b0:	22 0f       	add	r18, r18
 2b2:	33 1f       	adc	r19, r19
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	82 0f       	add	r24, r18
 2c2:	93 1f       	adc	r25, r19
 2c4:	9a 01       	movw	r18, r20
 2c6:	28 1b       	sub	r18, r24
 2c8:	39 0b       	sbc	r19, r25
 2ca:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <R4+0x1>
 2ce:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <R4>
	num2/=10;
 2d2:	9a 01       	movw	r18, r20
 2d4:	16 d6       	rcall	.+3116   	; 0xf02 <__umulhisi3>
 2d6:	fc 01       	movw	r30, r24
 2d8:	f6 95       	lsr	r31
 2da:	e7 95       	ror	r30
 2dc:	f6 95       	lsr	r31
 2de:	e7 95       	ror	r30
 2e0:	f6 95       	lsr	r31
 2e2:	e7 95       	ror	r30
	R3 = num2%10;
 2e4:	9f 01       	movw	r18, r30
 2e6:	0d d6       	rcall	.+3098   	; 0xf02 <__umulhisi3>
 2e8:	96 95       	lsr	r25
 2ea:	87 95       	ror	r24
 2ec:	96 95       	lsr	r25
 2ee:	87 95       	ror	r24
 2f0:	96 95       	lsr	r25
 2f2:	87 95       	ror	r24
 2f4:	9c 01       	movw	r18, r24
 2f6:	22 0f       	add	r18, r18
 2f8:	33 1f       	adc	r19, r19
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	82 0f       	add	r24, r18
 308:	93 1f       	adc	r25, r19
 30a:	9f 01       	movw	r18, r30
 30c:	28 1b       	sub	r18, r24
 30e:	39 0b       	sbc	r19, r25
 310:	30 93 67 00 	sts	0x0067, r19	; 0x800067 <R3+0x1>
 314:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <R3>
	num2/=10;
 318:	9a 01       	movw	r18, r20
 31a:	36 95       	lsr	r19
 31c:	27 95       	ror	r18
 31e:	36 95       	lsr	r19
 320:	27 95       	ror	r18
 322:	ab e7       	ldi	r26, 0x7B	; 123
 324:	b4 e1       	ldi	r27, 0x14	; 20
 326:	ed d5       	rcall	.+3034   	; 0xf02 <__umulhisi3>
 328:	fc 01       	movw	r30, r24
 32a:	f6 95       	lsr	r31
 32c:	e7 95       	ror	r30
	R2 = num2%10;
 32e:	9f 01       	movw	r18, r30
 330:	ad ec       	ldi	r26, 0xCD	; 205
 332:	bc ec       	ldi	r27, 0xCC	; 204
 334:	e6 d5       	rcall	.+3020   	; 0xf02 <__umulhisi3>
 336:	96 95       	lsr	r25
 338:	87 95       	ror	r24
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	96 95       	lsr	r25
 340:	87 95       	ror	r24
 342:	9c 01       	movw	r18, r24
 344:	22 0f       	add	r18, r18
 346:	33 1f       	adc	r19, r19
 348:	88 0f       	add	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	82 0f       	add	r24, r18
 356:	93 1f       	adc	r25, r19
 358:	9f 01       	movw	r18, r30
 35a:	28 1b       	sub	r18, r24
 35c:	39 0b       	sbc	r19, r25
 35e:	30 93 69 00 	sts	0x0069, r19	; 0x800069 <R2+0x1>
 362:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <R2>
	num2/=10;
 366:	9a 01       	movw	r18, r20
 368:	36 95       	lsr	r19
 36a:	27 95       	ror	r18
 36c:	36 95       	lsr	r19
 36e:	27 95       	ror	r18
 370:	36 95       	lsr	r19
 372:	27 95       	ror	r18
 374:	a5 ec       	ldi	r26, 0xC5	; 197
 376:	b0 e2       	ldi	r27, 0x20	; 32
 378:	c4 d5       	rcall	.+2952   	; 0xf02 <__umulhisi3>
 37a:	ac 01       	movw	r20, r24
 37c:	52 95       	swap	r21
 37e:	42 95       	swap	r20
 380:	4f 70       	andi	r20, 0x0F	; 15
 382:	45 27       	eor	r20, r21
 384:	5f 70       	andi	r21, 0x0F	; 15
 386:	45 27       	eor	r20, r21
	R1 = num2%10;
 388:	9a 01       	movw	r18, r20
 38a:	ad ec       	ldi	r26, 0xCD	; 205
 38c:	bc ec       	ldi	r27, 0xCC	; 204
 38e:	b9 d5       	rcall	.+2930   	; 0xf02 <__umulhisi3>
 390:	96 95       	lsr	r25
 392:	87 95       	ror	r24
 394:	96 95       	lsr	r25
 396:	87 95       	ror	r24
 398:	96 95       	lsr	r25
 39a:	87 95       	ror	r24
 39c:	9c 01       	movw	r18, r24
 39e:	22 0f       	add	r18, r18
 3a0:	33 1f       	adc	r19, r19
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	82 0f       	add	r24, r18
 3b0:	93 1f       	adc	r25, r19
 3b2:	9a 01       	movw	r18, r20
 3b4:	28 1b       	sub	r18, r24
 3b6:	39 0b       	sbc	r19, r25
 3b8:	30 93 6b 00 	sts	0x006B, r19	; 0x80006b <R1+0x1>
 3bc:	20 93 6a 00 	sts	0x006A, r18	; 0x80006a <R1>
	
}
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	08 95       	ret

000003c6 <__vector_4>:
ISR (TIMER1_COMPA_vect)
{
 3c6:	1f 92       	push	r1
 3c8:	0f 92       	push	r0
 3ca:	0f b6       	in	r0, 0x3f	; 63
 3cc:	0f 92       	push	r0
 3ce:	11 24       	eor	r1, r1
 3d0:	2f 93       	push	r18
 3d2:	3f 93       	push	r19
 3d4:	4f 93       	push	r20
 3d6:	5f 93       	push	r21
 3d8:	6f 93       	push	r22
 3da:	7f 93       	push	r23
 3dc:	8f 93       	push	r24
 3de:	9f 93       	push	r25
 3e0:	af 93       	push	r26
 3e2:	bf 93       	push	r27
 3e4:	ef 93       	push	r30
 3e6:	ff 93       	push	r31
	
	if (flag_plr1 == true) R4--;
 3e8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <flag_plr1>
 3ec:	88 23       	and	r24, r24
 3ee:	49 f0       	breq	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R4>
 3f4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <R4+0x1>
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <R4+0x1>
 3fe:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <R4>
	if (flag_plr2 == true) L4--;
 402:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 406:	88 23       	and	r24, r24
 408:	49 f0       	breq	.+18     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <L4>
 40e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <L4+0x1>
 412:	01 97       	sbiw	r24, 0x01	; 1
 414:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <L4+0x1>
 418:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <L4>
	
	if (R4 < 0) {R3--; R4 = 9; }
 41c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R4>
 420:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <R4+0x1>
 424:	99 23       	and	r25, r25
 426:	7c f4       	brge	.+30     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 428:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 42c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <R3+0x1>
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <R3+0x1>
 436:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <R3>
 43a:	89 e0       	ldi	r24, 0x09	; 9
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <R4+0x1>
 442:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <R4>
	if (R3 < 0) {R2--; R3 = 5;}	
 446:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 44a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <R3+0x1>
 44e:	99 23       	and	r25, r25
 450:	7c f4       	brge	.+30     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 452:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <R2>
 456:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <R2+0x1>
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <R2+0x1>
 460:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <R2>
 464:	85 e0       	ldi	r24, 0x05	; 5
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <R3+0x1>
 46c:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <R3>
	if (R2 < 0) {R1--; R2 = 9;}	
 470:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <R2>
 474:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <R2+0x1>
 478:	99 23       	and	r25, r25
 47a:	7c f4       	brge	.+30     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 47c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <R1>
 480:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <R1+0x1>
 484:	01 97       	sbiw	r24, 0x01	; 1
 486:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <R1+0x1>
 48a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <R1>
 48e:	89 e0       	ldi	r24, 0x09	; 9
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <R2+0x1>
 496:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <R2>
		
	if (L4 < 0) {L3--; L4 = 9;}
 49a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <L4>
 49e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <L4+0x1>
 4a2:	99 23       	and	r25, r25
 4a4:	7c f4       	brge	.+30     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4a6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <L3>
 4aa:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <L3+0x1>
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <L3+0x1>
 4b4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <L3>
 4b8:	89 e0       	ldi	r24, 0x09	; 9
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <L4+0x1>
 4c0:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <L4>
	if (L3 < 0) {L2--; L3 = 5;}
 4c4:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <L3>
 4c8:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <L3+0x1>
 4cc:	99 23       	and	r25, r25
 4ce:	7c f4       	brge	.+30     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4d0:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <L2>
 4d4:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <L2+0x1>
 4d8:	01 97       	sbiw	r24, 0x01	; 1
 4da:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <L2+0x1>
 4de:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <L2>
 4e2:	85 e0       	ldi	r24, 0x05	; 5
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <L3+0x1>
 4ea:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <L3>
	if (L2 < 0) {L1--; L2 = 9;}		
 4ee:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <L2>
 4f2:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <L2+0x1>
 4f6:	99 23       	and	r25, r25
 4f8:	7c f4       	brge	.+30     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fa:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <L1>
 4fe:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <L1+0x1>
 502:	01 97       	sbiw	r24, 0x01	; 1
 504:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <L1+0x1>
 508:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <L1>
 50c:	89 e0       	ldi	r24, 0x09	; 9
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <L2+0x1>
 514:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <L2>
	PLR_TIME_1 = (L1*1000+L2*100+L3*10+L4);
 518:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <L1>
 51c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <L1+0x1>
 520:	a8 ee       	ldi	r26, 0xE8	; 232
 522:	b3 e0       	ldi	r27, 0x03	; 3
 524:	8a 9f       	mul	r24, r26
 526:	90 01       	movw	r18, r0
 528:	8b 9f       	mul	r24, r27
 52a:	30 0d       	add	r19, r0
 52c:	9a 9f       	mul	r25, r26
 52e:	30 0d       	add	r19, r0
 530:	11 24       	eor	r1, r1
 532:	40 91 70 00 	lds	r20, 0x0070	; 0x800070 <L2>
 536:	50 91 71 00 	lds	r21, 0x0071	; 0x800071 <L2+0x1>
 53a:	64 e6       	ldi	r22, 0x64	; 100
 53c:	64 9f       	mul	r22, r20
 53e:	c0 01       	movw	r24, r0
 540:	65 9f       	mul	r22, r21
 542:	90 0d       	add	r25, r0
 544:	11 24       	eor	r1, r1
 546:	82 0f       	add	r24, r18
 548:	93 1f       	adc	r25, r19
 54a:	70 91 6e 00 	lds	r23, 0x006E	; 0x80006e <L3>
 54e:	27 2f       	mov	r18, r23
 550:	30 91 6f 00 	lds	r19, 0x006F	; 0x80006f <L3+0x1>
 554:	22 0f       	add	r18, r18
 556:	33 1f       	adc	r19, r19
 558:	a9 01       	movw	r20, r18
 55a:	44 0f       	add	r20, r20
 55c:	55 1f       	adc	r21, r21
 55e:	44 0f       	add	r20, r20
 560:	55 1f       	adc	r21, r21
 562:	24 0f       	add	r18, r20
 564:	35 1f       	adc	r19, r21
 566:	82 0f       	add	r24, r18
 568:	93 1f       	adc	r25, r19
 56a:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <L4>
 56e:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <L4+0x1>
 572:	84 0f       	add	r24, r20
 574:	95 1f       	adc	r25, r21
 576:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <PLR_TIME_1+0x1>
 57a:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <PLR_TIME_1>
	PLR_TIME_2 = (R1*1000+R2*100+R3*10+R4);
 57e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <R1>
 582:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <R1+0x1>
 586:	8a 9f       	mul	r24, r26
 588:	f0 01       	movw	r30, r0
 58a:	8b 9f       	mul	r24, r27
 58c:	f0 0d       	add	r31, r0
 58e:	9a 9f       	mul	r25, r26
 590:	f0 0d       	add	r31, r0
 592:	11 24       	eor	r1, r1
 594:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <R2>
 598:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <R2+0x1>
 59c:	62 9f       	mul	r22, r18
 59e:	c0 01       	movw	r24, r0
 5a0:	63 9f       	mul	r22, r19
 5a2:	90 0d       	add	r25, r0
 5a4:	11 24       	eor	r1, r1
 5a6:	e8 0f       	add	r30, r24
 5a8:	f9 1f       	adc	r31, r25
 5aa:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 5ae:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <R3+0x1>
 5b2:	dc 01       	movw	r26, r24
 5b4:	aa 0f       	add	r26, r26
 5b6:	bb 1f       	adc	r27, r27
 5b8:	9c 01       	movw	r18, r24
 5ba:	22 0f       	add	r18, r18
 5bc:	33 1f       	adc	r19, r19
 5be:	22 0f       	add	r18, r18
 5c0:	33 1f       	adc	r19, r19
 5c2:	22 0f       	add	r18, r18
 5c4:	33 1f       	adc	r19, r19
 5c6:	cd 01       	movw	r24, r26
 5c8:	82 0f       	add	r24, r18
 5ca:	93 1f       	adc	r25, r19
 5cc:	8e 0f       	add	r24, r30
 5ce:	9f 1f       	adc	r25, r31
 5d0:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <R4>
 5d4:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <R4+0x1>
 5d8:	82 0f       	add	r24, r18
 5da:	93 1f       	adc	r25, r19
 5dc:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <PLR_TIME_2+0x1>
 5e0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <PLR_TIME_2>
	
	
	EEPROM_write(1,(L4*10+L3));
 5e4:	44 0f       	add	r20, r20
 5e6:	64 2f       	mov	r22, r20
 5e8:	66 0f       	add	r22, r22
 5ea:	66 0f       	add	r22, r22
 5ec:	46 0f       	add	r20, r22
 5ee:	64 2f       	mov	r22, r20
 5f0:	67 0f       	add	r22, r23
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	5f dd       	rcall	.-1346   	; 0xb6 <_Z12EEPROM_writejh>
	EEPROM_write(2,(L2*10+L1));
 5f8:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <L2>
 5fc:	66 0f       	add	r22, r22
 5fe:	86 2f       	mov	r24, r22
 600:	88 0f       	add	r24, r24
 602:	88 0f       	add	r24, r24
 604:	68 0f       	add	r22, r24
 606:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <L1>
 60a:	68 0f       	add	r22, r24
 60c:	82 e0       	ldi	r24, 0x02	; 2
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	52 dd       	rcall	.-1372   	; 0xb6 <_Z12EEPROM_writejh>
	
	EEPROM_write(3,(R4*10+R3));
 612:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <R4>
 616:	66 0f       	add	r22, r22
 618:	86 2f       	mov	r24, r22
 61a:	88 0f       	add	r24, r24
 61c:	88 0f       	add	r24, r24
 61e:	68 0f       	add	r22, r24
 620:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 624:	68 0f       	add	r22, r24
 626:	83 e0       	ldi	r24, 0x03	; 3
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	45 dd       	rcall	.-1398   	; 0xb6 <_Z12EEPROM_writejh>
	EEPROM_write(4,(R2*10+R1));
 62c:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <R2>
 630:	66 0f       	add	r22, r22
 632:	86 2f       	mov	r24, r22
 634:	88 0f       	add	r24, r24
 636:	88 0f       	add	r24, r24
 638:	68 0f       	add	r22, r24
 63a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <R1>
 63e:	68 0f       	add	r22, r24
 640:	84 e0       	ldi	r24, 0x04	; 4
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	38 dd       	rcall	.-1424   	; 0xb6 <_Z12EEPROM_writejh>
	
}
 646:	ff 91       	pop	r31
 648:	ef 91       	pop	r30
 64a:	bf 91       	pop	r27
 64c:	af 91       	pop	r26
 64e:	9f 91       	pop	r25
 650:	8f 91       	pop	r24
 652:	7f 91       	pop	r23
 654:	6f 91       	pop	r22
 656:	5f 91       	pop	r21
 658:	4f 91       	pop	r20
 65a:	3f 91       	pop	r19
 65c:	2f 91       	pop	r18
 65e:	0f 90       	pop	r0
 660:	0f be       	out	0x3f, r0	; 63
 662:	0f 90       	pop	r0
 664:	1f 90       	pop	r1
 666:	18 95       	reti

00000668 <main>:


int main(void)
{
	uartINIT();
 668:	63 dd       	rcall	.-1338   	; 0x130 <_Z8uartINITv>
	timerINIT();
 66a:	74 dd       	rcall	.-1304   	; 0x154 <_Z9timerINITv>
	flag_plr1 = false;
 66c:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <flag_plr1>
	flag_plr2 = false;
 670:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
	
    DDRC = 0xFF;
 674:	8f ef       	ldi	r24, 0xFF	; 255
 676:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;
 678:	8a bb       	out	0x1a, r24	; 26
    DDRB = 0b01110000;
 67a:	80 e7       	ldi	r24, 0x70	; 112
 67c:	87 bb       	out	0x17, r24	; 23
	PORTB =0b00001111;
 67e:	8f e0       	ldi	r24, 0x0F	; 15
 680:	88 bb       	out	0x18, r24	; 24
	DDRD |= (1<<PD1);
 682:	81 b3       	in	r24, 0x11	; 17
 684:	82 60       	ori	r24, 0x02	; 2
 686:	81 bb       	out	0x11, r24	; 17
	
	
	//PLR_TIME_1=EEPROM_read(1)*100+EEPROM_read(4);
	//PLR_TIME_2=EEPROM_read(3)*100+EEPROM_read(4);
	//showNumber(PLR_TIME_1,PLR_TIME_2);
	if ((EEPROM_read(1)==0) & (EEPROM_read(2)==0)&(EEPROM_read(3)==0)&(EEPROM_read(4)==0))
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	20 dd       	rcall	.-1472   	; 0xce <_Z11EEPROM_readj>
 68e:	d8 2f       	mov	r29, r24
 690:	82 e0       	ldi	r24, 0x02	; 2
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	1c dd       	rcall	.-1480   	; 0xce <_Z11EEPROM_readj>
 696:	c1 e0       	ldi	r28, 0x01	; 1
 698:	d1 11       	cpse	r29, r1
 69a:	c0 e0       	ldi	r28, 0x00	; 0
 69c:	91 e0       	ldi	r25, 0x01	; 1
 69e:	81 11       	cpse	r24, r1
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	c9 23       	and	r28, r25
 6a4:	83 e0       	ldi	r24, 0x03	; 3
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	12 dd       	rcall	.-1500   	; 0xce <_Z11EEPROM_readj>
 6aa:	91 e0       	ldi	r25, 0x01	; 1
 6ac:	81 11       	cpse	r24, r1
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	c9 23       	and	r28, r25
 6b2:	84 e0       	ldi	r24, 0x04	; 4
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0b dd       	rcall	.-1514   	; 0xce <_Z11EEPROM_readj>
 6b8:	91 e0       	ldi	r25, 0x01	; 1
 6ba:	81 11       	cpse	r24, r1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	cc 23       	and	r28, r28
 6c0:	81 f0       	breq	.+32     	; 0x6e2 <main+0x7a>
 6c2:	99 23       	and	r25, r25
 6c4:	71 f0       	breq	.+28     	; 0x6e2 <main+0x7a>
		{
			PLR_TIME_1=1500;
 6c6:	8c ed       	ldi	r24, 0xDC	; 220
 6c8:	95 e0       	ldi	r25, 0x05	; 5
 6ca:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <PLR_TIME_1+0x1>
 6ce:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <PLR_TIME_1>
			PLR_TIME_2=1500;
 6d2:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <PLR_TIME_2+0x1>
 6d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <PLR_TIME_2>
			showNumber(PLR_TIME_1,PLR_TIME_2);
 6da:	6c ed       	ldi	r22, 0xDC	; 220
 6dc:	75 e0       	ldi	r23, 0x05	; 5
 6de:	48 dd       	rcall	.-1392   	; 0x170 <_Z10showNumberjj>
 6e0:	51 c1       	rjmp	.+674    	; 0x984 <main+0x31c>
		} else{
			PLR_TIME_1=((EEPROM_read(1))*100+EEPROM_read(2));
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	f3 dc       	rcall	.-1562   	; 0xce <_Z11EEPROM_readj>
 6e8:	14 e6       	ldi	r17, 0x64	; 100
 6ea:	18 9f       	mul	r17, r24
 6ec:	e0 01       	movw	r28, r0
 6ee:	11 24       	eor	r1, r1
 6f0:	82 e0       	ldi	r24, 0x02	; 2
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	ec dc       	rcall	.-1576   	; 0xce <_Z11EEPROM_readj>
 6f6:	c8 0f       	add	r28, r24
 6f8:	d1 1d       	adc	r29, r1
 6fa:	d0 93 77 00 	sts	0x0077, r29	; 0x800077 <PLR_TIME_1+0x1>
 6fe:	c0 93 76 00 	sts	0x0076, r28	; 0x800076 <PLR_TIME_1>
			PLR_TIME_2=((EEPROM_read(3))*100+EEPROM_read(4));
 702:	83 e0       	ldi	r24, 0x03	; 3
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	e3 dc       	rcall	.-1594   	; 0xce <_Z11EEPROM_readj>
 708:	18 9f       	mul	r17, r24
 70a:	70 01       	movw	r14, r0
 70c:	11 24       	eor	r1, r1
 70e:	84 e0       	ldi	r24, 0x04	; 4
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	dd dc       	rcall	.-1606   	; 0xce <_Z11EEPROM_readj>
 714:	e8 0e       	add	r14, r24
 716:	f1 1c       	adc	r15, r1
			
			unsigned int kostil_L4 = PLR_TIME_1%10;
 718:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <PLR_TIME_1>
 71c:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <PLR_TIME_1+0x1>
 720:	9a 01       	movw	r18, r20
 722:	ad ec       	ldi	r26, 0xCD	; 205
 724:	bc ec       	ldi	r27, 0xCC	; 204
 726:	ed d3       	rcall	.+2010   	; 0xf02 <__umulhisi3>
 728:	5c 01       	movw	r10, r24
 72a:	b6 94       	lsr	r11
 72c:	a7 94       	ror	r10
 72e:	b6 94       	lsr	r11
 730:	a7 94       	ror	r10
 732:	b6 94       	lsr	r11
 734:	a7 94       	ror	r10
 736:	c5 01       	movw	r24, r10
 738:	88 0f       	add	r24, r24
 73a:	99 1f       	adc	r25, r25
 73c:	aa 0c       	add	r10, r10
 73e:	bb 1c       	adc	r11, r11
 740:	aa 0c       	add	r10, r10
 742:	bb 1c       	adc	r11, r11
 744:	aa 0c       	add	r10, r10
 746:	bb 1c       	adc	r11, r11
 748:	8a 0d       	add	r24, r10
 74a:	9b 1d       	adc	r25, r11
 74c:	5a 01       	movw	r10, r20
 74e:	a8 1a       	sub	r10, r24
 750:	b9 0a       	sbc	r11, r25
			PLR_TIME_1/=10;
 752:	d7 d3       	rcall	.+1966   	; 0xf02 <__umulhisi3>
 754:	ac 01       	movw	r20, r24
 756:	56 95       	lsr	r21
 758:	47 95       	ror	r20
 75a:	56 95       	lsr	r21
 75c:	47 95       	ror	r20
 75e:	56 95       	lsr	r21
 760:	47 95       	ror	r20
			unsigned int kostil_L3 = PLR_TIME_1%10;
 762:	9a 01       	movw	r18, r20
 764:	ce d3       	rcall	.+1948   	; 0xf02 <__umulhisi3>
 766:	6c 01       	movw	r12, r24
 768:	d6 94       	lsr	r13
 76a:	c7 94       	ror	r12
 76c:	d6 94       	lsr	r13
 76e:	c7 94       	ror	r12
 770:	d6 94       	lsr	r13
 772:	c7 94       	ror	r12
 774:	c6 01       	movw	r24, r12
 776:	88 0f       	add	r24, r24
 778:	99 1f       	adc	r25, r25
 77a:	cc 0c       	add	r12, r12
 77c:	dd 1c       	adc	r13, r13
 77e:	cc 0c       	add	r12, r12
 780:	dd 1c       	adc	r13, r13
 782:	cc 0c       	add	r12, r12
 784:	dd 1c       	adc	r13, r13
 786:	8c 0d       	add	r24, r12
 788:	9d 1d       	adc	r25, r13
 78a:	6a 01       	movw	r12, r20
 78c:	c8 1a       	sub	r12, r24
 78e:	d9 0a       	sbc	r13, r25
			PLR_TIME_1/=10;
 790:	b8 d3       	rcall	.+1904   	; 0xf02 <__umulhisi3>
 792:	fc 01       	movw	r30, r24
 794:	f6 95       	lsr	r31
 796:	e7 95       	ror	r30
 798:	f6 95       	lsr	r31
 79a:	e7 95       	ror	r30
 79c:	f6 95       	lsr	r31
 79e:	e7 95       	ror	r30
			unsigned int kostil_L2 = PLR_TIME_1%10;
 7a0:	9f 01       	movw	r18, r30
 7a2:	af d3       	rcall	.+1886   	; 0xf02 <__umulhisi3>
 7a4:	ac 01       	movw	r20, r24
 7a6:	56 95       	lsr	r21
 7a8:	47 95       	ror	r20
 7aa:	56 95       	lsr	r21
 7ac:	47 95       	ror	r20
 7ae:	56 95       	lsr	r21
 7b0:	47 95       	ror	r20
 7b2:	ca 01       	movw	r24, r20
 7b4:	88 0f       	add	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	44 0f       	add	r20, r20
 7ba:	55 1f       	adc	r21, r21
 7bc:	44 0f       	add	r20, r20
 7be:	55 1f       	adc	r21, r21
 7c0:	44 0f       	add	r20, r20
 7c2:	55 1f       	adc	r21, r21
 7c4:	84 0f       	add	r24, r20
 7c6:	95 1f       	adc	r25, r21
 7c8:	af 01       	movw	r20, r30
 7ca:	48 1b       	sub	r20, r24
 7cc:	59 0b       	sbc	r21, r25
			PLR_TIME_1/=10;
 7ce:	99 d3       	rcall	.+1842   	; 0xf02 <__umulhisi3>
 7d0:	ec 01       	movw	r28, r24
 7d2:	d6 95       	lsr	r29
 7d4:	c7 95       	ror	r28
 7d6:	d6 95       	lsr	r29
 7d8:	c7 95       	ror	r28
 7da:	d6 95       	lsr	r29
 7dc:	c7 95       	ror	r28
			unsigned int kostil_L1 = PLR_TIME_1%10;
 7de:	9e 01       	movw	r18, r28
 7e0:	90 d3       	rcall	.+1824   	; 0xf02 <__umulhisi3>
 7e2:	96 95       	lsr	r25
 7e4:	87 95       	ror	r24
 7e6:	96 95       	lsr	r25
 7e8:	87 95       	ror	r24
 7ea:	96 95       	lsr	r25
 7ec:	87 95       	ror	r24
 7ee:	9c 01       	movw	r18, r24
 7f0:	22 0f       	add	r18, r18
 7f2:	33 1f       	adc	r19, r19
 7f4:	88 0f       	add	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	88 0f       	add	r24, r24
 7fa:	99 1f       	adc	r25, r25
 7fc:	88 0f       	add	r24, r24
 7fe:	99 1f       	adc	r25, r25
 800:	82 0f       	add	r24, r18
 802:	93 1f       	adc	r25, r19
 804:	9e 01       	movw	r18, r28
 806:	28 1b       	sub	r18, r24
 808:	39 0b       	sbc	r19, r25
 80a:	c9 01       	movw	r24, r18
			PLR_TIME_1 = kostil_L4*1000+kostil_L3*100+kostil_L2*10+kostil_L1;
 80c:	c8 ee       	ldi	r28, 0xE8	; 232
 80e:	d3 e0       	ldi	r29, 0x03	; 3
 810:	ac 9e       	mul	r10, r28
 812:	f0 01       	movw	r30, r0
 814:	ad 9e       	mul	r10, r29
 816:	f0 0d       	add	r31, r0
 818:	bc 9e       	mul	r11, r28
 81a:	f0 0d       	add	r31, r0
 81c:	11 24       	eor	r1, r1
 81e:	1c 9d       	mul	r17, r12
 820:	90 01       	movw	r18, r0
 822:	1d 9d       	mul	r17, r13
 824:	30 0d       	add	r19, r0
 826:	11 24       	eor	r1, r1
 828:	e2 0f       	add	r30, r18
 82a:	f3 1f       	adc	r31, r19
 82c:	9a 01       	movw	r18, r20
 82e:	22 0f       	add	r18, r18
 830:	33 1f       	adc	r19, r19
 832:	44 0f       	add	r20, r20
 834:	55 1f       	adc	r21, r21
 836:	44 0f       	add	r20, r20
 838:	55 1f       	adc	r21, r21
 83a:	44 0f       	add	r20, r20
 83c:	55 1f       	adc	r21, r21
 83e:	24 0f       	add	r18, r20
 840:	35 1f       	adc	r19, r21
 842:	2e 0f       	add	r18, r30
 844:	3f 1f       	adc	r19, r31
 846:	fc 01       	movw	r30, r24
 848:	e2 0f       	add	r30, r18
 84a:	f3 1f       	adc	r31, r19
 84c:	f0 93 77 00 	sts	0x0077, r31	; 0x800077 <PLR_TIME_1+0x1>
 850:	e0 93 76 00 	sts	0x0076, r30	; 0x800076 <PLR_TIME_1>
			
			unsigned int kostil_R4 = PLR_TIME_2%10;
 854:	97 01       	movw	r18, r14
 856:	55 d3       	rcall	.+1706   	; 0xf02 <__umulhisi3>
 858:	6c 01       	movw	r12, r24
 85a:	d6 94       	lsr	r13
 85c:	c7 94       	ror	r12
 85e:	d6 94       	lsr	r13
 860:	c7 94       	ror	r12
 862:	d6 94       	lsr	r13
 864:	c7 94       	ror	r12
 866:	c6 01       	movw	r24, r12
 868:	88 0f       	add	r24, r24
 86a:	99 1f       	adc	r25, r25
 86c:	cc 0c       	add	r12, r12
 86e:	dd 1c       	adc	r13, r13
 870:	cc 0c       	add	r12, r12
 872:	dd 1c       	adc	r13, r13
 874:	cc 0c       	add	r12, r12
 876:	dd 1c       	adc	r13, r13
 878:	8c 0d       	add	r24, r12
 87a:	9d 1d       	adc	r25, r13
 87c:	67 01       	movw	r12, r14
 87e:	c8 1a       	sub	r12, r24
 880:	d9 0a       	sbc	r13, r25
			PLR_TIME_2/=10;
 882:	3f d3       	rcall	.+1662   	; 0xf02 <__umulhisi3>
 884:	ac 01       	movw	r20, r24
 886:	56 95       	lsr	r21
 888:	47 95       	ror	r20
 88a:	56 95       	lsr	r21
 88c:	47 95       	ror	r20
 88e:	56 95       	lsr	r21
 890:	47 95       	ror	r20
			unsigned int kostil_R3 = PLR_TIME_2%10;
 892:	9a 01       	movw	r18, r20
 894:	36 d3       	rcall	.+1644   	; 0xf02 <__umulhisi3>
 896:	7c 01       	movw	r14, r24
 898:	f6 94       	lsr	r15
 89a:	e7 94       	ror	r14
 89c:	f6 94       	lsr	r15
 89e:	e7 94       	ror	r14
 8a0:	f6 94       	lsr	r15
 8a2:	e7 94       	ror	r14
 8a4:	c7 01       	movw	r24, r14
 8a6:	88 0f       	add	r24, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	ee 0c       	add	r14, r14
 8ac:	ff 1c       	adc	r15, r15
 8ae:	ee 0c       	add	r14, r14
 8b0:	ff 1c       	adc	r15, r15
 8b2:	ee 0c       	add	r14, r14
 8b4:	ff 1c       	adc	r15, r15
 8b6:	8e 0d       	add	r24, r14
 8b8:	9f 1d       	adc	r25, r15
 8ba:	7a 01       	movw	r14, r20
 8bc:	e8 1a       	sub	r14, r24
 8be:	f9 0a       	sbc	r15, r25
			PLR_TIME_2/=10;
 8c0:	20 d3       	rcall	.+1600   	; 0xf02 <__umulhisi3>
 8c2:	5c 01       	movw	r10, r24
 8c4:	b6 94       	lsr	r11
 8c6:	a7 94       	ror	r10
 8c8:	b6 94       	lsr	r11
 8ca:	a7 94       	ror	r10
 8cc:	b6 94       	lsr	r11
 8ce:	a7 94       	ror	r10
			unsigned int kostil_R2 = PLR_TIME_2%10;
 8d0:	95 01       	movw	r18, r10
 8d2:	17 d3       	rcall	.+1582   	; 0xf02 <__umulhisi3>
 8d4:	ac 01       	movw	r20, r24
 8d6:	56 95       	lsr	r21
 8d8:	47 95       	ror	r20
 8da:	56 95       	lsr	r21
 8dc:	47 95       	ror	r20
 8de:	56 95       	lsr	r21
 8e0:	47 95       	ror	r20
 8e2:	ca 01       	movw	r24, r20
 8e4:	88 0f       	add	r24, r24
 8e6:	99 1f       	adc	r25, r25
 8e8:	44 0f       	add	r20, r20
 8ea:	55 1f       	adc	r21, r21
 8ec:	44 0f       	add	r20, r20
 8ee:	55 1f       	adc	r21, r21
 8f0:	44 0f       	add	r20, r20
 8f2:	55 1f       	adc	r21, r21
 8f4:	84 0f       	add	r24, r20
 8f6:	95 1f       	adc	r25, r21
 8f8:	a5 01       	movw	r20, r10
 8fa:	48 1b       	sub	r20, r24
 8fc:	59 0b       	sbc	r21, r25
			PLR_TIME_2/=10;
 8fe:	01 d3       	rcall	.+1538   	; 0xf02 <__umulhisi3>
 900:	5c 01       	movw	r10, r24
 902:	b6 94       	lsr	r11
 904:	a7 94       	ror	r10
 906:	b6 94       	lsr	r11
 908:	a7 94       	ror	r10
 90a:	b6 94       	lsr	r11
 90c:	a7 94       	ror	r10
			unsigned int kostil_R1 = PLR_TIME_2%10;
 90e:	95 01       	movw	r18, r10
 910:	f8 d2       	rcall	.+1520   	; 0xf02 <__umulhisi3>
 912:	96 95       	lsr	r25
 914:	87 95       	ror	r24
 916:	96 95       	lsr	r25
 918:	87 95       	ror	r24
 91a:	96 95       	lsr	r25
 91c:	87 95       	ror	r24
 91e:	9c 01       	movw	r18, r24
 920:	22 0f       	add	r18, r18
 922:	33 1f       	adc	r19, r19
 924:	88 0f       	add	r24, r24
 926:	99 1f       	adc	r25, r25
 928:	88 0f       	add	r24, r24
 92a:	99 1f       	adc	r25, r25
 92c:	88 0f       	add	r24, r24
 92e:	99 1f       	adc	r25, r25
 930:	82 0f       	add	r24, r18
 932:	93 1f       	adc	r25, r19
 934:	95 01       	movw	r18, r10
 936:	28 1b       	sub	r18, r24
 938:	39 0b       	sbc	r19, r25
 93a:	c9 01       	movw	r24, r18
			PLR_TIME_2 = kostil_R4*1000+kostil_R3*100+kostil_R2*10+kostil_R1;		
 93c:	cc 9e       	mul	r12, r28
 93e:	b0 01       	movw	r22, r0
 940:	cd 9e       	mul	r12, r29
 942:	70 0d       	add	r23, r0
 944:	dc 9e       	mul	r13, r28
 946:	70 0d       	add	r23, r0
 948:	11 24       	eor	r1, r1
 94a:	1e 9d       	mul	r17, r14
 94c:	90 01       	movw	r18, r0
 94e:	1f 9d       	mul	r17, r15
 950:	30 0d       	add	r19, r0
 952:	11 24       	eor	r1, r1
 954:	62 0f       	add	r22, r18
 956:	73 1f       	adc	r23, r19
 958:	9a 01       	movw	r18, r20
 95a:	22 0f       	add	r18, r18
 95c:	33 1f       	adc	r19, r19
 95e:	44 0f       	add	r20, r20
 960:	55 1f       	adc	r21, r21
 962:	44 0f       	add	r20, r20
 964:	55 1f       	adc	r21, r21
 966:	44 0f       	add	r20, r20
 968:	55 1f       	adc	r21, r21
 96a:	24 0f       	add	r18, r20
 96c:	35 1f       	adc	r19, r21
 96e:	26 0f       	add	r18, r22
 970:	37 1f       	adc	r19, r23
 972:	bc 01       	movw	r22, r24
 974:	62 0f       	add	r22, r18
 976:	73 1f       	adc	r23, r19
 978:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <PLR_TIME_2+0x1>
 97c:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <PLR_TIME_2>
			showNumber(PLR_TIME_1,PLR_TIME_2);
 980:	cf 01       	movw	r24, r30
 982:	f6 db       	rcall	.-2068   	; 0x170 <_Z10showNumberjj>
			
    */
	
		
	
    sei();
 984:	78 94       	sei
	
    while (1) 
    {
		if (!(PINB&0b00000001)) {flag_plr1 = true; flag_plr2 = false;}
 986:	b0 99       	sbic	0x16, 0	; 22
 988:	05 c0       	rjmp	.+10     	; 0x994 <main+0x32c>
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <flag_plr1>
 990:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
			
		if (!(PINB&0b00000010)) {flag_plr1 = false; flag_plr2 = true;}	
 994:	b1 99       	sbic	0x16, 1	; 22
 996:	05 c0       	rjmp	.+10     	; 0x9a2 <main+0x33a>
 998:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <flag_plr1>
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
			
			
		
		if((set_time == false) & (!(PINB&0b00000100)))
 9a2:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 9a6:	86 b3       	in	r24, 0x16	; 22
 9a8:	86 95       	lsr	r24
 9aa:	86 95       	lsr	r24
 9ac:	91 e0       	ldi	r25, 0x01	; 1
 9ae:	89 27       	eor	r24, r25
 9b0:	81 70       	andi	r24, 0x01	; 1
 9b2:	28 17       	cp	r18, r24
 9b4:	f8 f4       	brcc	.+62     	; 0x9f4 <main+0x38c>
		{
			PLR_TIME_1=1500;
 9b6:	8c ed       	ldi	r24, 0xDC	; 220
 9b8:	95 e0       	ldi	r25, 0x05	; 5
 9ba:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <PLR_TIME_1+0x1>
 9be:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <PLR_TIME_1>
			PLR_TIME_2=1500;
 9c2:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <PLR_TIME_2+0x1>
 9c6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <PLR_TIME_2>
			set_time = true;
 9ca:	81 e0       	ldi	r24, 0x01	; 1
 9cc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			flag_plr1 = false; flag_plr2 = false;
 9d0:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <flag_plr1>
 9d4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
			showNumber(PLR_TIME_1,PLR_TIME_2);
 9d8:	6c ed       	ldi	r22, 0xDC	; 220
 9da:	75 e0       	ldi	r23, 0x05	; 5
 9dc:	8c ed       	ldi	r24, 0xDC	; 220
 9de:	95 e0       	ldi	r25, 0x05	; 5
 9e0:	c7 db       	rcall	.-2162   	; 0x170 <_Z10showNumberjj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 9e2:	3f e3       	ldi	r19, 0x3F	; 63
 9e4:	8d e0       	ldi	r24, 0x0D	; 13
 9e6:	93 e0       	ldi	r25, 0x03	; 3
 9e8:	31 50       	subi	r19, 0x01	; 1
 9ea:	80 40       	sbci	r24, 0x00	; 0
 9ec:	90 40       	sbci	r25, 0x00	; 0
 9ee:	e1 f7       	brne	.-8      	; 0x9e8 <main+0x380>
 9f0:	00 c0       	rjmp	.+0      	; 0x9f2 <main+0x38a>
 9f2:	00 00       	nop
			_delay_ms(1000);
		}
		
		
		if((set_time == true) & (!(PINB&0b00000100)))
 9f4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 9f8:	86 b3       	in	r24, 0x16	; 22
 9fa:	86 95       	lsr	r24
 9fc:	86 95       	lsr	r24
 9fe:	91 e0       	ldi	r25, 0x01	; 1
 a00:	89 27       	eor	r24, r25
 a02:	81 70       	andi	r24, 0x01	; 1
 a04:	22 23       	and	r18, r18
 a06:	f1 f0       	breq	.+60     	; 0xa44 <main+0x3dc>
 a08:	88 23       	and	r24, r24
 a0a:	e1 f0       	breq	.+56     	; 0xa44 <main+0x3dc>
		{
			PLR_TIME_1=500;
 a0c:	84 ef       	ldi	r24, 0xF4	; 244
 a0e:	91 e0       	ldi	r25, 0x01	; 1
 a10:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <PLR_TIME_1+0x1>
 a14:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <PLR_TIME_1>
			PLR_TIME_2=500;
 a18:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <PLR_TIME_2+0x1>
 a1c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <PLR_TIME_2>
			set_time = false;
 a20:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
			flag_plr1 = false; flag_plr2 = false;
 a24:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <flag_plr1>
 a28:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
			showNumber(PLR_TIME_1,PLR_TIME_2);
 a2c:	64 ef       	ldi	r22, 0xF4	; 244
 a2e:	71 e0       	ldi	r23, 0x01	; 1
 a30:	9f db       	rcall	.-2242   	; 0x170 <_Z10showNumberjj>
 a32:	2f e3       	ldi	r18, 0x3F	; 63
 a34:	3d e0       	ldi	r19, 0x0D	; 13
 a36:	83 e0       	ldi	r24, 0x03	; 3
 a38:	21 50       	subi	r18, 0x01	; 1
 a3a:	30 40       	sbci	r19, 0x00	; 0
 a3c:	80 40       	sbci	r24, 0x00	; 0
 a3e:	e1 f7       	brne	.-8      	; 0xa38 <main+0x3d0>
 a40:	00 c0       	rjmp	.+0      	; 0xa42 <main+0x3da>
 a42:	00 00       	nop
			_delay_ms(1000);
		}
		
		
		if (!(PINB&0b00001000)) 
 a44:	b3 99       	sbic	0x16, 3	; 22
 a46:	87 c1       	rjmp	.+782    	; 0xd56 <main+0x6ee>
			{
				//C_R4 = L1 + '0';
				uartSEND(L1+'0');
 a48:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <L1>
 a4c:	80 5d       	subi	r24, 0xD0	; 208
 a4e:	7e db       	rcall	.-2308   	; 0x14c <_Z8uartSENDh>
				uartSEND(L2+'0');
 a50:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <L2>
 a54:	80 5d       	subi	r24, 0xD0	; 208
 a56:	7a db       	rcall	.-2316   	; 0x14c <_Z8uartSENDh>
				uartSEND(L3+'0');
 a58:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <L3>
 a5c:	80 5d       	subi	r24, 0xD0	; 208
 a5e:	76 db       	rcall	.-2324   	; 0x14c <_Z8uartSENDh>
				uartSEND(L4+'0');
 a60:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <L4>
 a64:	80 5d       	subi	r24, 0xD0	; 208
 a66:	72 db       	rcall	.-2332   	; 0x14c <_Z8uartSENDh>
				uartSEND(':');
 a68:	8a e3       	ldi	r24, 0x3A	; 58
 a6a:	70 db       	rcall	.-2336   	; 0x14c <_Z8uartSENDh>
				uartSEND(R1+'0');
 a6c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <R1>
 a70:	80 5d       	subi	r24, 0xD0	; 208
 a72:	6c db       	rcall	.-2344   	; 0x14c <_Z8uartSENDh>
				uartSEND(R2+'0');
 a74:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <R2>
 a78:	80 5d       	subi	r24, 0xD0	; 208
 a7a:	68 db       	rcall	.-2352   	; 0x14c <_Z8uartSENDh>
				uartSEND(R3+'0');
 a7c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 a80:	80 5d       	subi	r24, 0xD0	; 208
 a82:	64 db       	rcall	.-2360   	; 0x14c <_Z8uartSENDh>
				uartSEND(R4+'0');
 a84:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R4>
 a88:	80 5d       	subi	r24, 0xD0	; 208
 a8a:	60 db       	rcall	.-2368   	; 0x14c <_Z8uartSENDh>
				uartSEND(' ');
 a8c:	80 e2       	ldi	r24, 0x20	; 32
 a8e:	5e db       	rcall	.-2372   	; 0x14c <_Z8uartSENDh>
				PLR_TIME_1=((EEPROM_read(1))*100+EEPROM_read(2));
 a90:	81 e0       	ldi	r24, 0x01	; 1
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	1c db       	rcall	.-2504   	; 0xce <_Z11EEPROM_readj>
 a96:	14 e6       	ldi	r17, 0x64	; 100
 a98:	18 9f       	mul	r17, r24
 a9a:	e0 01       	movw	r28, r0
 a9c:	11 24       	eor	r1, r1
 a9e:	82 e0       	ldi	r24, 0x02	; 2
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	15 db       	rcall	.-2518   	; 0xce <_Z11EEPROM_readj>
 aa4:	c8 0f       	add	r28, r24
 aa6:	d1 1d       	adc	r29, r1
 aa8:	d0 93 77 00 	sts	0x0077, r29	; 0x800077 <PLR_TIME_1+0x1>
 aac:	c0 93 76 00 	sts	0x0076, r28	; 0x800076 <PLR_TIME_1>
				PLR_TIME_2=((EEPROM_read(3))*100+EEPROM_read(4));
 ab0:	83 e0       	ldi	r24, 0x03	; 3
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0c db       	rcall	.-2536   	; 0xce <_Z11EEPROM_readj>
 ab6:	18 9f       	mul	r17, r24
 ab8:	70 01       	movw	r14, r0
 aba:	11 24       	eor	r1, r1
 abc:	84 e0       	ldi	r24, 0x04	; 4
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	06 db       	rcall	.-2548   	; 0xce <_Z11EEPROM_readj>
 ac2:	e8 0e       	add	r14, r24
 ac4:	f1 1c       	adc	r15, r1
				
				unsigned int kostil_L4 = PLR_TIME_1%10;
 ac6:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <PLR_TIME_1>
 aca:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <PLR_TIME_1+0x1>
 ace:	9a 01       	movw	r18, r20
 ad0:	ad ec       	ldi	r26, 0xCD	; 205
 ad2:	bc ec       	ldi	r27, 0xCC	; 204
 ad4:	16 d2       	rcall	.+1068   	; 0xf02 <__umulhisi3>
 ad6:	5c 01       	movw	r10, r24
 ad8:	b6 94       	lsr	r11
 ada:	a7 94       	ror	r10
 adc:	b6 94       	lsr	r11
 ade:	a7 94       	ror	r10
 ae0:	b6 94       	lsr	r11
 ae2:	a7 94       	ror	r10
 ae4:	c5 01       	movw	r24, r10
 ae6:	88 0f       	add	r24, r24
 ae8:	99 1f       	adc	r25, r25
 aea:	aa 0c       	add	r10, r10
 aec:	bb 1c       	adc	r11, r11
 aee:	aa 0c       	add	r10, r10
 af0:	bb 1c       	adc	r11, r11
 af2:	aa 0c       	add	r10, r10
 af4:	bb 1c       	adc	r11, r11
 af6:	a8 0e       	add	r10, r24
 af8:	b9 1e       	adc	r11, r25
 afa:	2a 19       	sub	r18, r10
 afc:	3b 09       	sbc	r19, r11
 afe:	59 01       	movw	r10, r18
				PLR_TIME_1/=10;
 b00:	9a 01       	movw	r18, r20
 b02:	ff d1       	rcall	.+1022   	; 0xf02 <__umulhisi3>
 b04:	ac 01       	movw	r20, r24
 b06:	56 95       	lsr	r21
 b08:	47 95       	ror	r20
 b0a:	56 95       	lsr	r21
 b0c:	47 95       	ror	r20
 b0e:	56 95       	lsr	r21
 b10:	47 95       	ror	r20
				unsigned int kostil_L3 = PLR_TIME_1%10;
 b12:	9a 01       	movw	r18, r20
 b14:	f6 d1       	rcall	.+1004   	; 0xf02 <__umulhisi3>
 b16:	6c 01       	movw	r12, r24
 b18:	d6 94       	lsr	r13
 b1a:	c7 94       	ror	r12
 b1c:	d6 94       	lsr	r13
 b1e:	c7 94       	ror	r12
 b20:	d6 94       	lsr	r13
 b22:	c7 94       	ror	r12
 b24:	c6 01       	movw	r24, r12
 b26:	88 0f       	add	r24, r24
 b28:	99 1f       	adc	r25, r25
 b2a:	cc 0c       	add	r12, r12
 b2c:	dd 1c       	adc	r13, r13
 b2e:	cc 0c       	add	r12, r12
 b30:	dd 1c       	adc	r13, r13
 b32:	cc 0c       	add	r12, r12
 b34:	dd 1c       	adc	r13, r13
 b36:	c8 0e       	add	r12, r24
 b38:	d9 1e       	adc	r13, r25
 b3a:	ca 01       	movw	r24, r20
 b3c:	8c 19       	sub	r24, r12
 b3e:	9d 09       	sbc	r25, r13
 b40:	6c 01       	movw	r12, r24
				PLR_TIME_1/=10;
 b42:	df d1       	rcall	.+958    	; 0xf02 <__umulhisi3>
 b44:	fc 01       	movw	r30, r24
 b46:	f6 95       	lsr	r31
 b48:	e7 95       	ror	r30
 b4a:	f6 95       	lsr	r31
 b4c:	e7 95       	ror	r30
 b4e:	f6 95       	lsr	r31
 b50:	e7 95       	ror	r30
				unsigned int kostil_L2 = PLR_TIME_1%10;
 b52:	9f 01       	movw	r18, r30
 b54:	d6 d1       	rcall	.+940    	; 0xf02 <__umulhisi3>
 b56:	ac 01       	movw	r20, r24
 b58:	56 95       	lsr	r21
 b5a:	47 95       	ror	r20
 b5c:	56 95       	lsr	r21
 b5e:	47 95       	ror	r20
 b60:	56 95       	lsr	r21
 b62:	47 95       	ror	r20
 b64:	ca 01       	movw	r24, r20
 b66:	88 0f       	add	r24, r24
 b68:	99 1f       	adc	r25, r25
 b6a:	44 0f       	add	r20, r20
 b6c:	55 1f       	adc	r21, r21
 b6e:	44 0f       	add	r20, r20
 b70:	55 1f       	adc	r21, r21
 b72:	44 0f       	add	r20, r20
 b74:	55 1f       	adc	r21, r21
 b76:	48 0f       	add	r20, r24
 b78:	59 1f       	adc	r21, r25
 b7a:	24 1b       	sub	r18, r20
 b7c:	35 0b       	sbc	r19, r21
 b7e:	a9 01       	movw	r20, r18
				PLR_TIME_1/=10;
 b80:	9f 01       	movw	r18, r30
 b82:	bf d1       	rcall	.+894    	; 0xf02 <__umulhisi3>
 b84:	ec 01       	movw	r28, r24
 b86:	d6 95       	lsr	r29
 b88:	c7 95       	ror	r28
 b8a:	d6 95       	lsr	r29
 b8c:	c7 95       	ror	r28
 b8e:	d6 95       	lsr	r29
 b90:	c7 95       	ror	r28
				unsigned int kostil_L1 = PLR_TIME_1%10;
 b92:	9e 01       	movw	r18, r28
 b94:	b6 d1       	rcall	.+876    	; 0xf02 <__umulhisi3>
 b96:	96 95       	lsr	r25
 b98:	87 95       	ror	r24
 b9a:	96 95       	lsr	r25
 b9c:	87 95       	ror	r24
 b9e:	96 95       	lsr	r25
 ba0:	87 95       	ror	r24
 ba2:	fc 01       	movw	r30, r24
 ba4:	ee 0f       	add	r30, r30
 ba6:	ff 1f       	adc	r31, r31
 ba8:	88 0f       	add	r24, r24
 baa:	99 1f       	adc	r25, r25
 bac:	88 0f       	add	r24, r24
 bae:	99 1f       	adc	r25, r25
 bb0:	88 0f       	add	r24, r24
 bb2:	99 1f       	adc	r25, r25
 bb4:	8e 0f       	add	r24, r30
 bb6:	9f 1f       	adc	r25, r31
 bb8:	28 1b       	sub	r18, r24
 bba:	39 0b       	sbc	r19, r25
 bbc:	c9 01       	movw	r24, r18
				PLR_TIME_1 = kostil_L4*1000+kostil_L3*100+kostil_L2*10+kostil_L1;
 bbe:	c8 ee       	ldi	r28, 0xE8	; 232
 bc0:	d3 e0       	ldi	r29, 0x03	; 3
 bc2:	ac 9e       	mul	r10, r28
 bc4:	f0 01       	movw	r30, r0
 bc6:	ad 9e       	mul	r10, r29
 bc8:	f0 0d       	add	r31, r0
 bca:	bc 9e       	mul	r11, r28
 bcc:	f0 0d       	add	r31, r0
 bce:	11 24       	eor	r1, r1
 bd0:	1c 9d       	mul	r17, r12
 bd2:	90 01       	movw	r18, r0
 bd4:	1d 9d       	mul	r17, r13
 bd6:	30 0d       	add	r19, r0
 bd8:	11 24       	eor	r1, r1
 bda:	e2 0f       	add	r30, r18
 bdc:	f3 1f       	adc	r31, r19
 bde:	ba 01       	movw	r22, r20
 be0:	66 0f       	add	r22, r22
 be2:	77 1f       	adc	r23, r23
 be4:	9a 01       	movw	r18, r20
 be6:	22 0f       	add	r18, r18
 be8:	33 1f       	adc	r19, r19
 bea:	22 0f       	add	r18, r18
 bec:	33 1f       	adc	r19, r19
 bee:	22 0f       	add	r18, r18
 bf0:	33 1f       	adc	r19, r19
 bf2:	ab 01       	movw	r20, r22
 bf4:	42 0f       	add	r20, r18
 bf6:	53 1f       	adc	r21, r19
 bf8:	4e 0f       	add	r20, r30
 bfa:	5f 1f       	adc	r21, r31
 bfc:	fc 01       	movw	r30, r24
 bfe:	e4 0f       	add	r30, r20
 c00:	f5 1f       	adc	r31, r21
 c02:	f0 93 77 00 	sts	0x0077, r31	; 0x800077 <PLR_TIME_1+0x1>
 c06:	e0 93 76 00 	sts	0x0076, r30	; 0x800076 <PLR_TIME_1>
				
				unsigned int kostil_R4 = PLR_TIME_2%10;
 c0a:	97 01       	movw	r18, r14
 c0c:	7a d1       	rcall	.+756    	; 0xf02 <__umulhisi3>
 c0e:	6c 01       	movw	r12, r24
 c10:	d6 94       	lsr	r13
 c12:	c7 94       	ror	r12
 c14:	d6 94       	lsr	r13
 c16:	c7 94       	ror	r12
 c18:	d6 94       	lsr	r13
 c1a:	c7 94       	ror	r12
 c1c:	c6 01       	movw	r24, r12
 c1e:	88 0f       	add	r24, r24
 c20:	99 1f       	adc	r25, r25
 c22:	cc 0c       	add	r12, r12
 c24:	dd 1c       	adc	r13, r13
 c26:	cc 0c       	add	r12, r12
 c28:	dd 1c       	adc	r13, r13
 c2a:	cc 0c       	add	r12, r12
 c2c:	dd 1c       	adc	r13, r13
 c2e:	c8 0e       	add	r12, r24
 c30:	d9 1e       	adc	r13, r25
 c32:	c7 01       	movw	r24, r14
 c34:	8c 19       	sub	r24, r12
 c36:	9d 09       	sbc	r25, r13
 c38:	6c 01       	movw	r12, r24
				PLR_TIME_2/=10;
 c3a:	63 d1       	rcall	.+710    	; 0xf02 <__umulhisi3>
 c3c:	ac 01       	movw	r20, r24
 c3e:	56 95       	lsr	r21
 c40:	47 95       	ror	r20
 c42:	56 95       	lsr	r21
 c44:	47 95       	ror	r20
 c46:	56 95       	lsr	r21
 c48:	47 95       	ror	r20
				unsigned int kostil_R3 = PLR_TIME_2%10;
 c4a:	9a 01       	movw	r18, r20
 c4c:	5a d1       	rcall	.+692    	; 0xf02 <__umulhisi3>
 c4e:	7c 01       	movw	r14, r24
 c50:	f6 94       	lsr	r15
 c52:	e7 94       	ror	r14
 c54:	f6 94       	lsr	r15
 c56:	e7 94       	ror	r14
 c58:	f6 94       	lsr	r15
 c5a:	e7 94       	ror	r14
 c5c:	c7 01       	movw	r24, r14
 c5e:	88 0f       	add	r24, r24
 c60:	99 1f       	adc	r25, r25
 c62:	ee 0c       	add	r14, r14
 c64:	ff 1c       	adc	r15, r15
 c66:	ee 0c       	add	r14, r14
 c68:	ff 1c       	adc	r15, r15
 c6a:	ee 0c       	add	r14, r14
 c6c:	ff 1c       	adc	r15, r15
 c6e:	e8 0e       	add	r14, r24
 c70:	f9 1e       	adc	r15, r25
 c72:	2e 19       	sub	r18, r14
 c74:	3f 09       	sbc	r19, r15
 c76:	79 01       	movw	r14, r18
				PLR_TIME_2/=10;
 c78:	9a 01       	movw	r18, r20
 c7a:	43 d1       	rcall	.+646    	; 0xf02 <__umulhisi3>
 c7c:	5c 01       	movw	r10, r24
 c7e:	b6 94       	lsr	r11
 c80:	a7 94       	ror	r10
 c82:	b6 94       	lsr	r11
 c84:	a7 94       	ror	r10
 c86:	b6 94       	lsr	r11
 c88:	a7 94       	ror	r10
				unsigned int kostil_R2 = PLR_TIME_2%10;
 c8a:	95 01       	movw	r18, r10
 c8c:	3a d1       	rcall	.+628    	; 0xf02 <__umulhisi3>
 c8e:	ac 01       	movw	r20, r24
 c90:	56 95       	lsr	r21
 c92:	47 95       	ror	r20
 c94:	56 95       	lsr	r21
 c96:	47 95       	ror	r20
 c98:	56 95       	lsr	r21
 c9a:	47 95       	ror	r20
 c9c:	ca 01       	movw	r24, r20
 c9e:	88 0f       	add	r24, r24
 ca0:	99 1f       	adc	r25, r25
 ca2:	44 0f       	add	r20, r20
 ca4:	55 1f       	adc	r21, r21
 ca6:	44 0f       	add	r20, r20
 ca8:	55 1f       	adc	r21, r21
 caa:	44 0f       	add	r20, r20
 cac:	55 1f       	adc	r21, r21
 cae:	48 0f       	add	r20, r24
 cb0:	59 1f       	adc	r21, r25
 cb2:	c5 01       	movw	r24, r10
 cb4:	84 1b       	sub	r24, r20
 cb6:	95 0b       	sbc	r25, r21
 cb8:	ac 01       	movw	r20, r24
				PLR_TIME_2/=10;
 cba:	23 d1       	rcall	.+582    	; 0xf02 <__umulhisi3>
 cbc:	5c 01       	movw	r10, r24
 cbe:	b6 94       	lsr	r11
 cc0:	a7 94       	ror	r10
 cc2:	b6 94       	lsr	r11
 cc4:	a7 94       	ror	r10
 cc6:	b6 94       	lsr	r11
 cc8:	a7 94       	ror	r10
				unsigned int kostil_R1 = PLR_TIME_2%10;
 cca:	95 01       	movw	r18, r10
 ccc:	1a d1       	rcall	.+564    	; 0xf02 <__umulhisi3>
 cce:	96 95       	lsr	r25
 cd0:	87 95       	ror	r24
 cd2:	96 95       	lsr	r25
 cd4:	87 95       	ror	r24
 cd6:	96 95       	lsr	r25
 cd8:	87 95       	ror	r24
 cda:	9c 01       	movw	r18, r24
 cdc:	22 0f       	add	r18, r18
 cde:	33 1f       	adc	r19, r19
 ce0:	bc 01       	movw	r22, r24
 ce2:	66 0f       	add	r22, r22
 ce4:	77 1f       	adc	r23, r23
 ce6:	66 0f       	add	r22, r22
 ce8:	77 1f       	adc	r23, r23
 cea:	66 0f       	add	r22, r22
 cec:	77 1f       	adc	r23, r23
 cee:	62 0f       	add	r22, r18
 cf0:	73 1f       	adc	r23, r19
 cf2:	c5 01       	movw	r24, r10
 cf4:	86 1b       	sub	r24, r22
 cf6:	97 0b       	sbc	r25, r23
				PLR_TIME_2 = kostil_R4*1000+kostil_R3*100+kostil_R2*10+kostil_R1;
 cf8:	cc 9e       	mul	r12, r28
 cfa:	b0 01       	movw	r22, r0
 cfc:	cd 9e       	mul	r12, r29
 cfe:	70 0d       	add	r23, r0
 d00:	dc 9e       	mul	r13, r28
 d02:	70 0d       	add	r23, r0
 d04:	11 24       	eor	r1, r1
 d06:	1e 9d       	mul	r17, r14
 d08:	90 01       	movw	r18, r0
 d0a:	1f 9d       	mul	r17, r15
 d0c:	30 0d       	add	r19, r0
 d0e:	11 24       	eor	r1, r1
 d10:	62 0f       	add	r22, r18
 d12:	73 1f       	adc	r23, r19
 d14:	da 01       	movw	r26, r20
 d16:	aa 0f       	add	r26, r26
 d18:	bb 1f       	adc	r27, r27
 d1a:	9a 01       	movw	r18, r20
 d1c:	22 0f       	add	r18, r18
 d1e:	33 1f       	adc	r19, r19
 d20:	22 0f       	add	r18, r18
 d22:	33 1f       	adc	r19, r19
 d24:	22 0f       	add	r18, r18
 d26:	33 1f       	adc	r19, r19
 d28:	ad 01       	movw	r20, r26
 d2a:	42 0f       	add	r20, r18
 d2c:	53 1f       	adc	r21, r19
 d2e:	46 0f       	add	r20, r22
 d30:	57 1f       	adc	r21, r23
 d32:	bc 01       	movw	r22, r24
 d34:	64 0f       	add	r22, r20
 d36:	75 1f       	adc	r23, r21
 d38:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <PLR_TIME_2+0x1>
 d3c:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <PLR_TIME_2>
				showNumber(PLR_TIME_1,PLR_TIME_2);
 d40:	cf 01       	movw	r24, r30
 d42:	16 da       	rcall	.-3028   	; 0x170 <_Z10showNumberjj>
 d44:	9f e5       	ldi	r25, 0x5F	; 95
 d46:	2a ee       	ldi	r18, 0xEA	; 234
 d48:	30 e0       	ldi	r19, 0x00	; 0
 d4a:	91 50       	subi	r25, 0x01	; 1
 d4c:	20 40       	sbci	r18, 0x00	; 0
 d4e:	30 40       	sbci	r19, 0x00	; 0
 d50:	e1 f7       	brne	.-8      	; 0xd4a <main+0x6e2>
 d52:	00 c0       	rjmp	.+0      	; 0xd54 <main+0x6ec>
 d54:	00 00       	nop
				 _delay_ms(300);
			}
			
			
			if ((PLR_TIME_1<16)) {PORTB |=(1<<PB4);} else {PORTB &= ~(1<<PB4);	}
 d56:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <PLR_TIME_1>
 d5a:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <PLR_TIME_1+0x1>
 d5e:	40 97       	sbiw	r24, 0x10	; 16
 d60:	20 f4       	brcc	.+8      	; 0xd6a <main+0x702>
 d62:	88 b3       	in	r24, 0x18	; 24
 d64:	80 61       	ori	r24, 0x10	; 16
 d66:	88 bb       	out	0x18, r24	; 24
 d68:	03 c0       	rjmp	.+6      	; 0xd70 <main+0x708>
 d6a:	88 b3       	in	r24, 0x18	; 24
 d6c:	8f 7e       	andi	r24, 0xEF	; 239
 d6e:	88 bb       	out	0x18, r24	; 24
			if ((PLR_TIME_2<16)) {PORTB |=(1<<PB5);} else {PORTB &= ~(1<<PB5);	}
 d70:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <PLR_TIME_2>
 d74:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <PLR_TIME_2+0x1>
 d78:	40 97       	sbiw	r24, 0x10	; 16
 d7a:	20 f4       	brcc	.+8      	; 0xd84 <main+0x71c>
 d7c:	88 b3       	in	r24, 0x18	; 24
 d7e:	80 62       	ori	r24, 0x20	; 32
 d80:	88 bb       	out	0x18, r24	; 24
 d82:	03 c0       	rjmp	.+6      	; 0xd8a <main+0x722>
 d84:	88 b3       	in	r24, 0x18	; 24
 d86:	8f 7d       	andi	r24, 0xDF	; 223
 d88:	88 bb       	out	0x18, r24	; 24
			if ((PLR_TIME_1 <=4) | (PLR_TIME_2<=4)) {PORTB |=(1<<PB6);} else {PORTB &= ~(1<<PB6);}
 d8a:	81 e0       	ldi	r24, 0x01	; 1
 d8c:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <PLR_TIME_1>
 d90:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <PLR_TIME_1+0x1>
 d94:	25 30       	cpi	r18, 0x05	; 5
 d96:	31 05       	cpc	r19, r1
 d98:	08 f0       	brcs	.+2      	; 0xd9c <main+0x734>
 d9a:	80 e0       	ldi	r24, 0x00	; 0
 d9c:	81 11       	cpse	r24, r1
 d9e:	0b c0       	rjmp	.+22     	; 0xdb6 <main+0x74e>
 da0:	81 e0       	ldi	r24, 0x01	; 1
 da2:	20 91 74 00 	lds	r18, 0x0074	; 0x800074 <PLR_TIME_2>
 da6:	30 91 75 00 	lds	r19, 0x0075	; 0x800075 <PLR_TIME_2+0x1>
 daa:	25 30       	cpi	r18, 0x05	; 5
 dac:	31 05       	cpc	r19, r1
 dae:	08 f0       	brcs	.+2      	; 0xdb2 <main+0x74a>
 db0:	80 e0       	ldi	r24, 0x00	; 0
 db2:	88 23       	and	r24, r24
 db4:	21 f0       	breq	.+8      	; 0xdbe <main+0x756>
 db6:	88 b3       	in	r24, 0x18	; 24
 db8:	80 64       	ori	r24, 0x40	; 64
 dba:	88 bb       	out	0x18, r24	; 24
 dbc:	03 c0       	rjmp	.+6      	; 0xdc4 <main+0x75c>
 dbe:	88 b3       	in	r24, 0x18	; 24
 dc0:	8f 7b       	andi	r24, 0xBF	; 191
 dc2:	88 bb       	out	0x18, r24	; 24
				
			if (PLR_TIME_1 == 0) 
 dc4:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <PLR_TIME_1>
 dc8:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <PLR_TIME_1+0x1>
 dcc:	89 2b       	or	r24, r25
 dce:	91 f4       	brne	.+36     	; 0xdf4 <main+0x78c>
			{
				L1='-';
 dd0:	8d e2       	ldi	r24, 0x2D	; 45
 dd2:	90 e0       	ldi	r25, 0x00	; 0
 dd4:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <L1+0x1>
 dd8:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <L1>
				L2='-';
 ddc:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <L2+0x1>
 de0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <L2>
				L3='-';
 de4:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <L3+0x1>
 de8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <L3>
				L4='-';
 dec:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <L4+0x1>
 df0:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <L4>
			}
			
			if (PLR_TIME_2 == 0)
 df4:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <PLR_TIME_2>
 df8:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <PLR_TIME_2+0x1>
 dfc:	89 2b       	or	r24, r25
 dfe:	91 f4       	brne	.+36     	; 0xe24 <main+0x7bc>
			{
				R1='-';
 e00:	8d e2       	ldi	r24, 0x2D	; 45
 e02:	90 e0       	ldi	r25, 0x00	; 0
 e04:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <R1+0x1>
 e08:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <R1>
				R2='-';
 e0c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <R2+0x1>
 e10:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <R2>
				R3='-';
 e14:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <R3+0x1>
 e18:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <R3>
				R4='-';
 e1c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <R4+0x1>
 e20:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <R4>
			}
			
		PORTC = 0b00000001; segchar(L1);
 e24:	81 e0       	ldi	r24, 0x01	; 1
 e26:	85 bb       	out	0x15, r24	; 21
 e28:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <L1>
 e2c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <L1+0x1>
 e30:	57 d9       	rcall	.-3410   	; 0xe0 <_Z7segcharj>
 e32:	89 ef       	ldi	r24, 0xF9	; 249
 e34:	90 e0       	ldi	r25, 0x00	; 0
 e36:	01 97       	sbiw	r24, 0x01	; 1
 e38:	f1 f7       	brne	.-4      	; 0xe36 <main+0x7ce>
 e3a:	00 c0       	rjmp	.+0      	; 0xe3c <main+0x7d4>
 e3c:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b00000010; segchar(L2); PORTA+=0b10000000;
 e3e:	82 e0       	ldi	r24, 0x02	; 2
 e40:	85 bb       	out	0x15, r24	; 21
 e42:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <L2>
 e46:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <L2+0x1>
 e4a:	4a d9       	rcall	.-3436   	; 0xe0 <_Z7segcharj>
 e4c:	8b b3       	in	r24, 0x1b	; 27
 e4e:	80 58       	subi	r24, 0x80	; 128
 e50:	8b bb       	out	0x1b, r24	; 27
 e52:	89 ef       	ldi	r24, 0xF9	; 249
 e54:	90 e0       	ldi	r25, 0x00	; 0
 e56:	01 97       	sbiw	r24, 0x01	; 1
 e58:	f1 f7       	brne	.-4      	; 0xe56 <main+0x7ee>
 e5a:	00 c0       	rjmp	.+0      	; 0xe5c <main+0x7f4>
 e5c:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b00000100; segchar(L3);
 e5e:	84 e0       	ldi	r24, 0x04	; 4
 e60:	85 bb       	out	0x15, r24	; 21
 e62:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <L3>
 e66:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <L3+0x1>
 e6a:	3a d9       	rcall	.-3468   	; 0xe0 <_Z7segcharj>
 e6c:	89 ef       	ldi	r24, 0xF9	; 249
 e6e:	90 e0       	ldi	r25, 0x00	; 0
 e70:	01 97       	sbiw	r24, 0x01	; 1
 e72:	f1 f7       	brne	.-4      	; 0xe70 <main+0x808>
 e74:	00 c0       	rjmp	.+0      	; 0xe76 <main+0x80e>
 e76:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b00001000; segchar(L4);
 e78:	88 e0       	ldi	r24, 0x08	; 8
 e7a:	85 bb       	out	0x15, r24	; 21
 e7c:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <L4>
 e80:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <L4+0x1>
 e84:	2d d9       	rcall	.-3494   	; 0xe0 <_Z7segcharj>
 e86:	89 ef       	ldi	r24, 0xF9	; 249
 e88:	90 e0       	ldi	r25, 0x00	; 0
 e8a:	01 97       	sbiw	r24, 0x01	; 1
 e8c:	f1 f7       	brne	.-4      	; 0xe8a <main+0x822>
 e8e:	00 c0       	rjmp	.+0      	; 0xe90 <main+0x828>
 e90:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b00010000; segchar(R1);
 e92:	80 e1       	ldi	r24, 0x10	; 16
 e94:	85 bb       	out	0x15, r24	; 21
 e96:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <R1>
 e9a:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <R1+0x1>
 e9e:	20 d9       	rcall	.-3520   	; 0xe0 <_Z7segcharj>
 ea0:	89 ef       	ldi	r24, 0xF9	; 249
 ea2:	90 e0       	ldi	r25, 0x00	; 0
 ea4:	01 97       	sbiw	r24, 0x01	; 1
 ea6:	f1 f7       	brne	.-4      	; 0xea4 <main+0x83c>
 ea8:	00 c0       	rjmp	.+0      	; 0xeaa <main+0x842>
 eaa:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b00100000; segchar(R2); PORTA+=0b10000000;
 eac:	80 e2       	ldi	r24, 0x20	; 32
 eae:	85 bb       	out	0x15, r24	; 21
 eb0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <R2>
 eb4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <R2+0x1>
 eb8:	13 d9       	rcall	.-3546   	; 0xe0 <_Z7segcharj>
 eba:	8b b3       	in	r24, 0x1b	; 27
 ebc:	80 58       	subi	r24, 0x80	; 128
 ebe:	8b bb       	out	0x1b, r24	; 27
 ec0:	89 ef       	ldi	r24, 0xF9	; 249
 ec2:	90 e0       	ldi	r25, 0x00	; 0
 ec4:	01 97       	sbiw	r24, 0x01	; 1
 ec6:	f1 f7       	brne	.-4      	; 0xec4 <main+0x85c>
 ec8:	00 c0       	rjmp	.+0      	; 0xeca <main+0x862>
 eca:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b01000000; segchar(R3);
 ecc:	80 e4       	ldi	r24, 0x40	; 64
 ece:	85 bb       	out	0x15, r24	; 21
 ed0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <R3>
 ed4:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <R3+0x1>
 ed8:	03 d9       	rcall	.-3578   	; 0xe0 <_Z7segcharj>
 eda:	89 ef       	ldi	r24, 0xF9	; 249
 edc:	90 e0       	ldi	r25, 0x00	; 0
 ede:	01 97       	sbiw	r24, 0x01	; 1
 ee0:	f1 f7       	brne	.-4      	; 0xede <main+0x876>
 ee2:	00 c0       	rjmp	.+0      	; 0xee4 <main+0x87c>
 ee4:	00 00       	nop
		_delay_ms(1);
		
		PORTC = 0b10000000; segchar(R4);
 ee6:	80 e8       	ldi	r24, 0x80	; 128
 ee8:	85 bb       	out	0x15, r24	; 21
 eea:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <R4>
 eee:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <R4+0x1>
 ef2:	f6 d8       	rcall	.-3604   	; 0xe0 <_Z7segcharj>
 ef4:	89 ef       	ldi	r24, 0xF9	; 249
 ef6:	90 e0       	ldi	r25, 0x00	; 0
 ef8:	01 97       	sbiw	r24, 0x01	; 1
 efa:	f1 f7       	brne	.-4      	; 0xef8 <main+0x890>
 efc:	00 c0       	rjmp	.+0      	; 0xefe <main+0x896>
 efe:	00 00       	nop
 f00:	42 cd       	rjmp	.-1404   	; 0x986 <main+0x31e>

00000f02 <__umulhisi3>:
 f02:	a2 9f       	mul	r26, r18
 f04:	b0 01       	movw	r22, r0
 f06:	b3 9f       	mul	r27, r19
 f08:	c0 01       	movw	r24, r0
 f0a:	a3 9f       	mul	r26, r19
 f0c:	01 d0       	rcall	.+2      	; 0xf10 <__umulhisi3+0xe>
 f0e:	b2 9f       	mul	r27, r18
 f10:	70 0d       	add	r23, r0
 f12:	81 1d       	adc	r24, r1
 f14:	11 24       	eor	r1, r1
 f16:	91 1d       	adc	r25, r1
 f18:	08 95       	ret

00000f1a <_exit>:
 f1a:	f8 94       	cli

00000f1c <__stop_program>:
 f1c:	ff cf       	rjmp	.-2      	; 0xf1c <__stop_program>
